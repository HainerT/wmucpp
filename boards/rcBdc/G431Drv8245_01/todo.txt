Tests:
-----
* Test 2048-FFT processing time (not enough RAM, need G473)

ToDo
-----
* indexCutoff with factor: adjustable via menu
* width of cos-window for spectrum-weighting adjustable (menu)
* window: cos or cos^2
* adaptive current measuring point in time: low-duty: at end of pulse, hight-duty: in the middle
* limit pwm-duty zu 98% due to mosfet-driver
* Tmp1/2 telemetry (motor via LMT01) enable via menu
* PID menu not functional
* PID parameter: absolute / relative mode
* pulse-count hysterese via DAC
* after disconnect goto state check?
* settings -> eeprom (pwm, cutoff);
* test with crsf-parameter-type > 1byte, e.g. uint16_t

Details:
-----
* comparator: enable via conditional compilation
* use defines (name, defaults)
* remove TIM3, TIM4, ADC1 usage, instead use class-names
* pulse-count hysterese (DAC) via DMA
* pulse-count: counting-timer + retriggerable-one-oulse-timer gating

Done:
-----
* efficiency: outside the window no computation
* eKM measuring: next erpm must be higher than previous
* smooth roll-off after eKm measure
* adjustable prerun hysteresis
* enable (different) window-functions via crsf-menu
* crsf-parser: address handling? response only to own address
* use real duty (inertia) for estimator
* time-domain window (Blackmann-Nuttall-Window, ggf. wählbar über Menu)
* parameter for Rm/Lm estimator: pwm-freq: low/middle/high = 100/200/400 Hz
* calibrate UBatt (menu)
* curr sometimes not displayed correcly (after calibrate!!)
* check Rm measure (pwm-freq?, saturation?)
* implement PID-controller (use eKm * UBatt * input-duty as control-input)
* for resetting: user confirm
* for calibrating: user confirm
* when calibrating: display different steps
* externer temperatursensor LMT01
* power-on tone
* reset-to-defaults action
* temperatur exp filter
* determine eKm for both directions
* use Rm / eKm for both directions in estimator
* connected: after reset not shown
* run-protection
* select crsf-channel

Rejected:
-----
* fft-Size: 2048, measure processing time -> not enough RAM STM32G473
