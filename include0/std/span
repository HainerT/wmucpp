/*
 * WMuCpp - Bare Metal C++ 
 * Copyright (C) 2016, 2017 Wilhelm Meier <wilhelm.wm.meier@googlemail.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

#pragma once

#include "cstdint"

namespace std {
    template<typename T, auto Size>
    struct span {
        using value_type = T;
        using size_type = std::conditional_t<Size <= std::numeric_limits<uint8_t>::max(), uint8_t, uint16_t>;
        explicit span(T* const ptr) : mData{ptr} {}
        T* begin() const {
            return mData;
        }  
        T* end() const {
            return mData + Size;
        }  
        T* const mData;
    };
}
