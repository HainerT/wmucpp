#pragma once

#include <type_traits>

namespace std {
    namespace detail {
        
        template< class T, class U >
        concept SameHelper = std::is_same_v<std::remove_cvref_t<T>, std::remove_cvref_t<U>>;
    }
     
    template< class T, class U >
    concept same_as = detail::SameHelper<T, U> && detail::SameHelper<U, T>;
    
}
